/*  –ö–æ–ª–µ—Å–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ ‚Äî –ø–æ—à–∞–≥–æ–≤—ã–π –æ–ø—Ä–æ—Å  */
/*  –ê–ª–≥–æ—Ä–∏—Ç–º:
    1. spheres[] ‚Äì –º–∞—Å—Å–∏–≤ 8 –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∫–ª—é—á–æ–º, –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏.
    2. currentSphere ‚Äì –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Å—Ñ–µ—Ä—ã.
    3. results ‚Äì —Å–ª–æ–≤–∞—Ä—å {key: score}.
    4. renderSphere() –ø–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç —ç–∫—Ä–∞–Ω.
    5. finishTest() –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —á–µ—Ä–µ–∑ 3 —Å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ Bot.   */

const spheres = [
  { key: "health",  title: "–ó–¥–æ—Ä–æ–≤—å–µ",    emoji: "üèÉ‚Äç‚ôÇÔ∏è", questions: [
      "–ö–∞–∫ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ?",
      "–•–≤–∞—Ç–∞–µ—Ç –ª–∏ —ç–Ω–µ—Ä–≥–∏–∏ –Ω–∞ –¥–µ–Ω—å?",
      "–£–¥–µ–ª—è–µ—Ç–µ –ª–∏ –≤—Ä–µ–º—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–µ?"
  ]},
  { key: "career",  title: "–ö–∞—Ä—å–µ—Ä–∞",     emoji: "üíº", questions: [
      "–ü—Ä–∏–Ω–æ—Å–∏—Ç –ª–∏ —Ä–∞–±–æ—Ç–∞ –æ—â—É—â–µ–Ω–∏–µ —Å–º—ã—Å–ª–∞?",
      "–ï—Å—Ç—å –ª–∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞ —Ä–æ—Å—Ç–∞?",
      "–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ü–µ–ª—è–º?"
  ]},
  { key: "finance", title: "–§–∏–Ω–∞–Ω—Å—ã",     emoji: "üí∞", questions: [
      "–£—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞?",
      "–ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –ª–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å?",
      "–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ª–∏ –±—é–¥–∂–µ—Ç?"
  ]},
  { key: "love",    title: "–õ—é–±–æ–≤—å",      emoji: "‚ù§Ô∏è", questions: [
      "–ï—Å—Ç—å –ª–∏ –±–ª–∏–∑–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞?",
      "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –ª–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏?",
      "–î–æ–≤–æ–ª—å–Ω—ã –∫–∞—á–µ—Å—Ç–≤–æ–º –æ–±—â–µ–Ω–∏—è?"
  ]},
  { key: "family",  title: "–°–µ–º—å—è",       emoji: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶", questions: [
      "–ì–∞—Ä–º–æ–Ω–∏—á–Ω—ã –ª–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è?",
      "–•–≤–∞—Ç–∞–µ—Ç –ª–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å –±–ª–∏–∑–∫–∏–º–∏?",
      "–ï—Å—Ç—å –ª–∏ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ?"
  ]},
  { key: "friends", title: "–î—Ä—É–∑—å—è",      emoji: "üë•", questions: [
      "–ï—Å—Ç—å –ª–∏ –Ω–∞–¥—ë–∂–Ω—ã–µ –¥—Ä—É–∑—å—è?",
      "–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –ª–∏ –∫—Ä—É–≥ –æ–±—â–µ–Ω–∏—è?",
      "–õ–µ–≥–∫–æ –ª–∏ –∑–∞–≤–æ–¥–∏—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?"
  ]},
  { key: "hobby",   title: "–•–æ–±–±–∏",       emoji: "üé≠", questions: [
      "–•–≤–∞—Ç–∞–µ—Ç –ª–∏ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —É–≤–ª–µ—á–µ–Ω–∏—è?",
      "–ü–æ–ª—É—á–∞–µ—Ç–µ –ª–∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –¥–æ—Å—É–≥–∞?",
      "–£–º–µ–µ—Ç–µ –ª–∏ –æ—Ç–¥—ã—Ö–∞—Ç—å?"
  ]},
  { key: "self",    title: "–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ",emoji: "üìö", questions: [
      "–£—á–∏—Ç–µ—Å—å –ª–∏ –Ω–æ–≤–æ–º—É?",
      "–†–∞–∑–≤–∏–≤–∞–µ—Ç–µ—Å—å –ª–∏ –ª–∏—á–Ω–æ—Å—Ç–Ω–æ?",
      "–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –Ω–∞–¥ —Å–æ–±–æ–π?"
  ]},
];

let currentSphere = 0;
const results = {};

/* ========================================================= */

document.addEventListener("DOMContentLoaded", () => {
  if (window.Telegram?.WebApp) {
    Telegram.WebApp.ready();
    Telegram.WebApp.expand();
  }
  renderSphere();
});

/* ----------------   UI-—Ä–µ–Ω–¥–µ—Ä –æ–¥–Ω–æ–π —Å—Ñ–µ—Ä—ã   --------------- */
function renderSphere() {
  const sp = spheres[currentSphere];
  const progress = ((currentSphere + 1) / spheres.length) * 100;
  const saved = results[sp.key] ?? 5;

  document.getElementById("app").innerHTML = `
    <div class="sphere-header">
      <h2>${sp.emoji} ${sp.title}</h2>
    </div>

    <div class="progress-bar">
      <div class="progress-fill" style="width:${progress}%"></div>
      <span class="progress-text">${currentSphere + 1} / ${spheres.length}</span>
    </div>

    <div class="questions">
      ${sp.questions.map(q => `<p class="question">‚Ä¢ ${q}</p>`).join("")}
    </div>

    <div class="slider-container">
      <label>–í–∞—à–∞ –æ—Ü–µ–Ω–∫–∞: <span id="slider-val">${saved}</span>/10</label>
      <input type="range" id="slider" min="1" max="10" value="${saved}" class="slider">
      <div class="slider-labels"><span>1</span><span>10</span></div>
    </div>

    <div class="buttons-container">
      ${currentSphere > 0
        ? `<button id="prevBtn" class="btn btn-secondary">‚Üê –ù–∞–∑–∞–¥</button>`
        : `<div></div>`}
      <button id="nextBtn" class="btn btn-primary">
        ${currentSphere < spheres.length - 1 ? "–î–∞–ª–µ–µ ‚Üí" : "–ó–∞–≤–µ—Ä—à–∏—Ç—å ‚úì"}
      </button>
    </div>
  `;

  /* ‚Äî‚Äî‚Äî –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ‚Äî‚Äî‚Äî */
  const slider = document.getElementById("slider");
  slider.addEventListener("input", e => {
    document.getElementById("slider-val").textContent = e.target.value;
  });

  document.getElementById("nextBtn").addEventListener("click", () => {
    results[sp.key] = Number(slider.value);
    if (currentSphere < spheres.length - 1) {
      currentSphere += 1;
      renderSphere();
    } else {
      finishTest();
    }
  });

  const prev = document.getElementById("prevBtn");
  if (prev) {
    prev.addEventListener("click", () => {
      currentSphere -= 1;
      renderSphere();
    });
  }
}

/* ----------------  –≠–∫—Ä–∞–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è + –æ—Ç–ø—Ä–∞–≤–∫–∞ ------------- */
function finishTest() {
  document.getElementById("app").innerHTML = `
    <div class="completion-message">
      <div class="completion-icon">‚úÖ</div>
      <h2>–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!</h2>
      <p>–í–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –±–æ—Ç—É‚Ä¶</p>
      <p>–ß–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</p>
      <ul>
        <li>üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±–∞–ª–∞–Ω—Å–∞</li>
        <li>üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</li>
        <li>üìÑ PDF –æ—Ç—á—ë—Ç —Å –∫–æ–ª–µ—Å–æ–º –∂–∏–∑–Ω–∏</li>
      </ul>
      <div class="loading-spinner"></div>
    </div>
  `;

  /* –î–µ–ª–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é –ø–∞—É–∑—É, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–µ–ª —Å–æ–æ–±—â–µ–Ω–∏–µ */
  setTimeout(() => {
    try {
      Telegram.WebApp.sendData(JSON.stringify(results));
    } catch (err) {
      console.error("SendData error:", err);
      alert("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
    }
  }, 3000);
}
