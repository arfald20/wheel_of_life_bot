/**
 * –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Web App "–ö–æ–ª–µ—Å–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞"
 */

class LifeBalanceApp {
    constructor() {
        this.currentSphereIndex = 0;
        this.scores = {};
        this.isInitialized = false;
        
        // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ñ–µ—Ä –∏ –≤–æ–ø—Ä–æ—Å–æ–≤
        this.spheresData = {
            'health': {
                emoji: 'üèÉ‚Äç‚ôÇÔ∏è',
                title: '–ó–¥–æ—Ä–æ–≤—å–µ',
                description: '–û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –∏ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ',
                questions: [
                    '–ö–∞–∫ –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ?',
                    '–•–≤–∞—Ç–∞–µ—Ç –ª–∏ —ç–Ω–µ—Ä–≥–∏–∏ –Ω–∞ –≤–µ—Å—å –¥–µ–Ω—å?',
                    '–£–¥–µ–ª—è–µ—Ç–µ –ª–∏ –≤—Ä–µ–º—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–µ –∑–¥–æ—Ä–æ–≤—å—è?'
                ]
            },
            'career': {
                emoji: 'üíº',
                title: '–ö–∞—Ä—å–µ—Ä–∞',
                description: '–ö–∞–∫ —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –≤–∞—à–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å',
                questions: [
                    '–ü—Ä–∏–Ω–æ—Å–∏—Ç –ª–∏ —Ä–∞–±–æ—Ç–∞ –æ—â—É—â–µ–Ω–∏–µ —Å–º—ã—Å–ª–∞?',
                    '–ï—Å—Ç—å –ª–∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–æ—Å—Ç–∞?',
                    '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–∏–º —Ü–µ–ª—è–º?'
                ]
            },
            'finance': {
                emoji: 'üí∞',
                title: '–§–∏–Ω–∞–Ω—Å—ã', 
                description: '–û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ',
                questions: [
                    '–£—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞?',
                    '–ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –ª–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å?',
                    '–ü–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ª–∏ —Å–µ–º–µ–π–Ω—ã–π –±—é–¥–∂–µ—Ç?'
                ]
            },
            'love': {
                emoji: '‚ù§Ô∏è',
                title: '–õ—é–±–æ–≤—å',
                description: '–û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à–∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è',
                questions: [
                    '–ï—Å—Ç—å –ª–∏ –±–ª–∏–∑–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞?',
                    '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω—ã –ª–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º–∏?',
                    '–î–æ–≤–æ–ª—å–Ω—ã –∫–∞—á–µ—Å—Ç–≤–æ–º –æ–±—â–µ–Ω–∏—è?'
                ]
            },
            'family': {
                emoji: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
                title: '–°–µ–º—å—è',
                description: '–ö–∞–∫ —Å–∫–ª–∞–¥—ã–≤–∞—é—Ç—Å—è –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å –±–ª–∏–∑–∫–∏–º–∏',
                questions: [
                    '–ì–∞—Ä–º–æ–Ω–∏—á–Ω—ã –ª–∏ —Å–µ–º–µ–π–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è?',
                    '–•–≤–∞—Ç–∞–µ—Ç –ª–∏ –≤—Ä–µ–º–µ–Ω–∏ —Å –±–ª–∏–∑–∫–∏–º–∏?',
                    '–ï—Å—Ç—å –ª–∏ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ –≤ —Å–µ–º—å–µ?'
                ]
            },
            'friends': {
                emoji: 'üë•',
                title: '–î—Ä—É–∑—å—è',
                description: '–û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à –∫—Ä—É–≥ –æ–±—â–µ–Ω–∏—è –∏ –¥—Ä—É–∂–±—ã',
                questions: [
                    '–ï—Å—Ç—å –ª–∏ –Ω–∞–¥—ë–∂–Ω—ã–µ –¥—Ä—É–∑—å—è?',
                    '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –ª–∏ –∫—Ä—É–≥ –æ–±—â–µ–Ω–∏—è?',
                    '–õ–µ–≥–∫–æ –ª–∏ –∑–∞–≤–æ–¥–∏—Ç—å –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞?'
                ]
            },
            'hobby': {
                emoji: 'üé≠',
                title: '–•–æ–±–±–∏',
                description: '–ö–∞–∫ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è',
                questions: [
                    '–•–≤–∞—Ç–∞–µ—Ç –ª–∏ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —É–≤–ª–µ—á–µ–Ω–∏—è?',
                    '–ü–æ–ª—É—á–∞–µ—Ç–µ –ª–∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ –æ—Ç –¥–æ—Å—É–≥–∞?',
                    '–£–º–µ–µ—Ç–µ –ª–∏ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ –æ—Ç–¥—ã—Ö–∞—Ç—å?'
                ]
            },
            'self': {
                emoji: 'üìö',
                title: '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ',
                description: '–û—Ü–µ–Ω–∏—Ç–µ –≤–∞—à –ª–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç',
                questions: [
                    '–£—á–∏—Ç–µ—Å—å –ª–∏ –Ω–æ–≤–æ–º—É —Ä–µ–≥—É–ª—è—Ä–Ω–æ?',
                    '–†–∞–∑–≤–∏–≤–∞–µ—Ç–µ—Å—å –ª–∏ –∫–∞–∫ –ª–∏—á–Ω–æ—Å—Ç—å?',
                    '–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –Ω–∞–¥ —Å–æ–±–æ–π?'
                ]
            }
        };

        this.sphereKeys = Object.keys(this.spheresData);
        
        this.init();
    }

    async init() {
        try {
            // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram Web App
            await this.waitForTelegram();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            this.initDOM();
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
            this.setupEventListeners();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
            this.updateProgress();
            
            this.isInitialized = true;
            console.log('Life Balance App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
        }
    }

    async waitForTelegram() {
        return new Promise((resolve) => {
            if (window.telegramApp && window.telegramApp.isReady) {
                resolve();
            } else {
                const checkTelegram = setInterval(() => {
                    if (window.telegramApp && window.telegramApp.isReady) {
                        clearInterval(checkTelegram);
                        resolve();
                    }
                }, 100);
                
                // Fallback —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
                setTimeout(() => {
                    clearInterval(checkTelegram);
                    console.warn('Telegram Web App –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ');
                    resolve();
                }, 3000);
            }
        });
    }

    initDOM() {
        // –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        this.progressFill = document.getElementById('progressFill');
        this.currentStepSpan = document.getElementById('currentStep');
        this.totalStepsSpan = document.getElementById('totalSteps');
        
        // –≠–∫—Ä–∞–Ω—ã
        this.welcomeScreen = document.getElementById('welcomeScreen');
        this.assessmentScreen = document.getElementById('assessmentScreen');
        this.completionScreen = document.getElementById('completionScreen');
        
        // –≠–ª–µ–º–µ–Ω—Ç—ã –æ—Ü–µ–Ω–∫–∏
        this.sphereEmoji = document.getElementById('sphereEmoji');
        this.sphereTitle = document.getElementById('sphereTitle');
        this.sphereDescription = document.getElementById('sphereDescription');
        this.questionsList = document.getElementById('questionsList');
        this.ratingSlider = document.getElementById('ratingSlider');
        this.ratingValue = document.getElementById('ratingValue');
        this.ratingLabel = document.getElementById('ratingLabel');
        
        // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.prevBtn = document.getElementById('prevBtn');
        this.nextBtn = document.getElementById('nextBtn');
        
        // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        this.resultsPreview = document.getElementById('resultsPreview');
        
        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —à–∞–≥–æ–≤
        if (this.totalStepsSpan) {
            this.totalStepsSpan.textContent = this.sphereKeys.length;
        }
    }

    setupEventListeners() {
        // –°–ª–∞–π–¥–µ—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞
        if (this.ratingSlider) {
            this.ratingSlider.addEventListener('input', (e) => {
                this.updateRatingDisplay(e.target.value);
            });
        }

        // –•–∞–ø–∏—Ç–∏–∫ —Ñ–∏–¥–±–µ–∫ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞
        if (this.ratingSlider && window.telegramApp) {
            this.ratingSlider.addEventListener('input', () => {
                window.telegramApp.hapticFeedback('selection');
            });
        }
    }

    updateProgress() {
        const progress = (this.currentSphereIndex / this.sphereKeys.length) * 100;
        
        if (this.progressFill) {
            this.progressFill.style.width = `${progress}%`;
        }
        
        if (this.currentStepSpan) {
            this.currentStepSpan.textContent = this.currentSphereIndex + 1;
        }
    }

    showScreen(screenId) {
        // –°–∫—Ä—ã—Ç—å –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
        document.querySelectorAll('.screen').forEach(screen => {
            screen.classList.remove('active');
        });
        
        // –ü–æ–∫–∞–∑–∞—Ç—å –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
        const screen = document.getElementById(screenId);
        if (screen) {
            screen.classList.add('active');
        }
    }

    startAssessment() {
        if (window.telegramApp) {
            window.telegramApp.hapticFeedback('impact', 'light');
        }
        
        this.currentSphereIndex = 0;
        this.scores = {};
        this.showScreen('assessmentScreen');
        this.displayCurrentSphere();
        this.updateProgress();
    }

    displayCurrentSphere() {
        const sphereKey = this.sphereKeys[this.currentSphereIndex];
        const sphereData = this.spheresData[sphereKey];
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ñ–µ—Ä–µ
        if (this.sphereEmoji) {
            this.sphereEmoji.textContent = sphereData.emoji;
        }
        
        if (this.sphereTitle) {
            this.sphereTitle.textContent = sphereData.title;
        }
        
        if (this.sphereDescription) {
            this.sphereDescription.textContent = sphereData.description;
        }
        
        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤
        if (this.questionsList) {
            this.questionsList.innerHTML = '';
            
            sphereData.questions.forEach((question, index) => {
                const questionDiv = document.createElement('div');
                questionDiv.className = 'question-item';
                
                questionDiv.innerHTML = `
                    <div class="question-number">${index + 1}.</div>
                    <div class="question-text">${question}</div>
                `;
                
                this.questionsList.appendChild(questionDiv);
            });
        }
        
        // –°–±—Ä–æ—Å —Å–ª–∞–π–¥–µ—Ä–∞
        if (this.ratingSlider) {
            const previousScore = this.scores[sphereKey] || 5;
            this.ratingSlider.value = previousScore;
            this.updateRatingDisplay(previousScore);
        }
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        this.updateNavigationButtons();
    }

    updateRatingDisplay(value) {
        if (this.ratingValue) {
            this.ratingValue.textContent = value;
        }
        
        if (this.ratingLabel) {
            const labels = {
                '1': '–æ—á–µ–Ω—å –ø–ª–æ—Ö–æ',
                '2': '–ø–ª–æ—Ö–æ', 
                '3': '–Ω–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ',
                '4': '–Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ',
                '5': '—Å—Ä–µ–¥–Ω–µ',
                '6': '–≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ',
                '7': '—Ö–æ—Ä–æ—à–æ',
                '8': '–æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ',
                '9': '–æ—Ç–ª–∏—á–Ω–æ',
                '10': '–∏–¥–µ–∞–ª—å–Ω–æ'
            };
            this.ratingLabel.textContent = `–∏–∑ 10 (${labels[value] || ''})`;
        }
    }

    updateNavigationButtons() {
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if (this.prevBtn) {
            if (this.currentSphereIndex === 0) {
                this.prevBtn.style.display = 'none';
            } else {
                this.prevBtn.style.display = 'block';
            }
        }
        
        // –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ"
        if (this.nextBtn) {
            if (this.currentSphereIndex === this.sphereKeys.length - 1) {
                this.nextBtn.textContent = '–ó–∞–≤–µ—Ä—à–∏—Ç—å';
            } else {
                this.nextBtn.textContent = '–î–∞–ª–µ–µ ‚Üí';
            }
        }
    }

    nextSphere() {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –æ—Ü–µ–Ω–∫—É
        const sphereKey = this.sphereKeys[this.currentSphereIndex];
        const score = parseInt(this.ratingSlider.value);
        this.scores[sphereKey] = score;
        
        // –•–∞–ø–∏—Ç–∏–∫ —Ñ–∏–¥–±–µ–∫
        if (window.telegramApp) {
            window.telegramApp.hapticFeedback('impact', 'light');
        }
        
        if (this.currentSphereIndex < this.sphereKeys.length - 1) {
            // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ñ–µ—Ä–µ
            this.currentSphereIndex++;
            this.displayCurrentSphere();
            this.updateProgress();
        } else {
            // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏
            this.completeAssessment();
        }
    }

    previousSphere() {
        if (this.currentSphereIndex > 0) {
            // –•–∞–ø–∏—Ç–∏–∫ —Ñ–∏–¥–±–µ–∫
            if (window.telegramApp) {
                window.telegramApp.hapticFeedback('impact', 'light');
            }
            
            this.currentSphereIndex--;
            this.displayCurrentSphere();
            this.updateProgress();
        }
    }

    completeAssessment() {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ 100%
        this.updateProgress();
        
        // –ü–æ–∫–∞–∑ —ç–∫—Ä–∞–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        this.showScreen('completionScreen');
        
        // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        this.generateResultsPreview();
        
        // –•–∞–ø–∏—Ç–∏–∫ —Ñ–∏–¥–±–µ–∫ —É—Å–ø–µ—Ö–∞
        if (window.telegramApp) {
            window.telegramApp.hapticFeedback('notification', 'success');
        }
    }

    generateResultsPreview() {
        if (!this.resultsPreview) return;
        
        const summary = window.ResultsUtils.generateSummary(this.scores);
        
        this.resultsPreview.innerHTML = `
            <div class="preview-item">
                <span class="preview-label">–û–±—â–∏–π –±–∞–ª–ª:</span>
                <span class="preview-value">${summary.analysis.total}/80</span>
            </div>
            <div class="preview-item">
                <span class="preview-label">–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞:</span>
                <span class="preview-value">${summary.analysis.average}/10</span>
            </div>
            <div class="preview-item">
                <span class="preview-label">–õ—É—á—à–∞—è —Å—Ñ–µ—Ä–∞:</span>
                <span class="preview-value">${summary.strongest.info.emoji} ${summary.strongest.info.title}</span>
            </div>
            <div class="preview-item">
                <span class="preview-label">–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è:</span>
                <span class="preview-value">${summary.weakest.info.emoji} ${summary.weakest.info.title}</span>
            </div>
            <div class="preview-item">
                <span class="preview-label">–ë–∞–ª–∞–Ω—Å:</span>
                <span class="preview-value">${summary.analysis.balanceLevel}</span>
            </div>
        `;
    }

    sendResults() {
        if (!this.isInitialized) {
            console.error('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
            return;
        }
        
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', this.scores);
        
        // –•–∞–ø–∏—Ç–∏–∫ —Ñ–∏–¥–±–µ–∫
        if (window.telegramApp) {
            window.telegramApp.hapticFeedback('impact', 'medium');
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É
            window.telegramApp.sendData(this.scores);
        } else {
            // Fallback –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ Telegram
            console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ü–µ–Ω–∫–∏:', this.scores);
            alert('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ—Ç–æ–≤—ã! (–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –±–µ–∑ Telegram)');
        }
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ HTML
function startAssessment() {
    if (window.lifeBalanceApp) {
        window.lifeBalanceApp.startAssessment();
    }
}

function nextSphere() {
    if (window.lifeBalanceApp) {
        window.lifeBalanceApp.nextSphere();
    }
}

function previousSphere() {
    if (window.lifeBalanceApp) {
        window.lifeBalanceApp.previousSphere();
    }
}

function updateRatingDisplay(value) {
    if (window.lifeBalanceApp) {
        window.lifeBalanceApp.updateRatingDisplay(value);
    }
}

function sendResults() {
    if (window.lifeBalanceApp) {
        window.lifeBalanceApp.sendResults();
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
    window.lifeBalanceApp = new LifeBalanceApp();
});